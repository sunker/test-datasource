name: E2E tests
on:
  pull_request:

permissions:
  contents: read
  id-token: write

jobs:
  playwright-tests:
    # needs: resolve-versions
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        GRAFANA_IMAGE:
          [
            { name: 'grafana-dev', version: '10.4.0-160354' },
            { name: 'grafana-enterprise', version: '10.3.1' },
            { name: 'grafana-enterprise', version: '10.2.3' },
            { name: 'grafana-enterprise', version: '10.1.6' },
            { name: 'grafana-enterprise', version: '10.0.10' },
            { name: 'grafana-enterprise', version: '9.5.15' },
            { name: 'grafana-enterprise', version: '9.4.2' },
            { name: 'grafana-enterprise', version: '9.3.2' },
            { name: 'grafana-enterprise', version: '9.2.2' },
            { name: 'grafana-enterprise', version: '9.1.2' },
            { name: 'grafana-enterprise', version: '9.0.2' },
            { name: 'grafana-enterprise', version: '8.5.2' },
          ]
    name: e2e ${{ matrix.GRAFANA_IMAGE.name }}@${{ matrix.GRAFANA_IMAGE.VERSION }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: print
        run: |
          echo ${{ github.repository_owner }}
          echo ${{ github.event.organization.login }}

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Install npm dependencies
        run: npm ci --legacy-peer-deps

      - name: Build frontend
        run: npm run build

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Start Grafana
        run: |
          docker-compose pull
          GRAFANA_VERSION=${{ matrix.GRAFANA_IMAGE.VERSION }} GRAFANA_IMAGE=${{ matrix.GRAFANA_IMAGE.NAME }} docker-compose up -d

      - name: Wait for Grafana to start
        uses: nev7n/wait_for_response@v1
        with:
          url: 'http://localhost:3001/'
          responseCode: 200
          timeout: 60000
          interval: 500

      - name: Run Playwright tests
        id: run-tests
        run: npx playwright test

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: ${{ github.repository_owner != 'grafana' && (always() && steps.run-tests.outcome == 'success') || (failure() && steps.run-tests.outcome == 'failure') }}
        with:
          name: playwright-report-${{ matrix.GRAFANA_IMAGE.NAME }}-v${{ matrix.GRAFANA_IMAGE.VERSION }}-${{github.run_id}}
          path: playwright-report/
          retention-days: 30

      - name: Publish report to GCS
        if: ${{ github.repository_owner == 'grafana' && (always() && steps.run-tests.outcome == 'success') || (failure() && steps.run-tests.outcome == 'failure') }}
        uses: grafana/plugin-actions/publish-report@main
        with:
          grafana-version: ${{ matrix.GRAFANA_IMAGE.VERSION }}
